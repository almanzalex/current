{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderalmanza/current/src/components/TimelineChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useStore } from '../store';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst TimelineChart = () => {\n  _s();\n  const {\n    news,\n    tweets,\n    stockData\n  } = useStore();\n  const chartData = useMemo(() => {\n    // Create a map of timestamps to aggregate data\n    const dataMap = new Map();\n\n    // Process news articles\n    news.forEach(article => {\n      const timestamp = new Date(article.publishedAt).getTime();\n      const hour = Math.floor(timestamp / 3600000) * 3600000;\n      if (!dataMap.has(hour)) {\n        dataMap.set(hour, {\n          newsCount: 0,\n          sentimentSum: 0,\n          tweetCount: 0,\n          price: null\n        });\n      }\n      dataMap.get(hour).newsCount++;\n    });\n\n    // Process tweets\n    tweets.forEach(tweet => {\n      const timestamp = new Date(tweet.createdAt).getTime();\n      const hour = Math.floor(timestamp / 3600000) * 3600000;\n      if (!dataMap.has(hour)) {\n        dataMap.set(hour, {\n          newsCount: 0,\n          sentimentSum: 0,\n          tweetCount: 0,\n          price: null\n        });\n      }\n      const data = dataMap.get(hour);\n      data.sentimentSum += tweet.sentiment.score;\n      data.tweetCount++;\n    });\n\n    // Process stock data\n    stockData.forEach(point => {\n      const hour = Math.floor(point.timestamp * 1000 / 3600000) * 3600000;\n      if (!dataMap.has(hour)) {\n        dataMap.set(hour, {\n          newsCount: 0,\n          sentimentSum: 0,\n          tweetCount: 0,\n          price: null\n        });\n      }\n      dataMap.get(hour).price = point.price;\n    });\n\n    // Convert map to sorted array\n    const sortedData = Array.from(dataMap.entries()).sort(([a], [b]) => a - b).map(([timestamp, data]) => ({\n      timestamp,\n      newsCount: data.newsCount,\n      averageSentiment: data.tweetCount > 0 ? data.sentimentSum / data.tweetCount : 0,\n      price: data.price\n    }));\n    return {\n      labels: sortedData.map(d => new Date(d.timestamp).toLocaleString()),\n      datasets: [{\n        label: 'News Articles',\n        data: sortedData.map(d => d.newsCount),\n        borderColor: 'rgb(59, 130, 246)',\n        backgroundColor: 'rgba(59, 130, 246, 0.5)',\n        yAxisID: 'y'\n      }, {\n        label: 'Social Sentiment',\n        data: sortedData.map(d => d.averageSentiment),\n        borderColor: 'rgb(139, 92, 246)',\n        backgroundColor: 'rgba(139, 92, 246, 0.5)',\n        yAxisID: 'y1'\n      }, {\n        label: 'Stock Price',\n        data: sortedData.map(d => d.price),\n        borderColor: 'rgb(16, 185, 129)',\n        backgroundColor: 'rgba(16, 185, 129, 0.5)',\n        yAxisID: 'y2'\n      }]\n    };\n  }, [news, tweets, stockData]);\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Correlation Timeline'\n      }\n    },\n    scales: {\n      y: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        title: {\n          display: true,\n          text: 'News Count'\n        }\n      },\n      y1: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Sentiment Score'\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      },\n      y2: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Stock Price ($)'\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-96\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(TimelineChart, \"j2JZUhFsS2ysRtKJ3xg7SupVYPY=\", false, function () {\n  return [useStore];\n});\n_c = TimelineChart;\nexport default TimelineChart;\nvar _c;\n$RefreshReg$(_c, \"TimelineChart\");","map":{"version":3,"names":["React","useMemo","Line","useStore","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","TimelineChart","_s","news","tweets","stockData","chartData","dataMap","Map","forEach","article","timestamp","Date","publishedAt","getTime","hour","Math","floor","has","set","newsCount","sentimentSum","tweetCount","price","get","tweet","createdAt","data","sentiment","score","point","sortedData","Array","from","entries","sort","a","b","map","averageSentiment","labels","d","toLocaleString","datasets","label","borderColor","backgroundColor","yAxisID","options","responsive","interaction","mode","intersect","plugins","title","display","text","scales","y","type","position","y1","grid","drawOnChartArea","y2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexanderalmanza/current/src/components/TimelineChart.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useStore } from '../store';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst TimelineChart: React.FC = () => {\n  const { news, tweets, stockData } = useStore();\n\n  const chartData = useMemo(() => {\n    // Create a map of timestamps to aggregate data\n    const dataMap = new Map();\n\n    // Process news articles\n    news.forEach(article => {\n      const timestamp = new Date(article.publishedAt).getTime();\n      const hour = Math.floor(timestamp / 3600000) * 3600000;\n      \n      if (!dataMap.has(hour)) {\n        dataMap.set(hour, { newsCount: 0, sentimentSum: 0, tweetCount: 0, price: null });\n      }\n      \n      dataMap.get(hour).newsCount++;\n    });\n\n    // Process tweets\n    tweets.forEach(tweet => {\n      const timestamp = new Date(tweet.createdAt).getTime();\n      const hour = Math.floor(timestamp / 3600000) * 3600000;\n      \n      if (!dataMap.has(hour)) {\n        dataMap.set(hour, { newsCount: 0, sentimentSum: 0, tweetCount: 0, price: null });\n      }\n      \n      const data = dataMap.get(hour);\n      data.sentimentSum += tweet.sentiment.score;\n      data.tweetCount++;\n    });\n\n    // Process stock data\n    stockData.forEach(point => {\n      const hour = Math.floor(point.timestamp * 1000 / 3600000) * 3600000;\n      \n      if (!dataMap.has(hour)) {\n        dataMap.set(hour, { newsCount: 0, sentimentSum: 0, tweetCount: 0, price: null });\n      }\n      \n      dataMap.get(hour).price = point.price;\n    });\n\n    // Convert map to sorted array\n    const sortedData = Array.from(dataMap.entries())\n      .sort(([a], [b]) => a - b)\n      .map(([timestamp, data]) => ({\n        timestamp,\n        newsCount: data.newsCount,\n        averageSentiment: data.tweetCount > 0 ? data.sentimentSum / data.tweetCount : 0,\n        price: data.price,\n      }));\n\n    return {\n      labels: sortedData.map(d => new Date(d.timestamp).toLocaleString()),\n      datasets: [\n        {\n          label: 'News Articles',\n          data: sortedData.map(d => d.newsCount),\n          borderColor: 'rgb(59, 130, 246)',\n          backgroundColor: 'rgba(59, 130, 246, 0.5)',\n          yAxisID: 'y',\n        },\n        {\n          label: 'Social Sentiment',\n          data: sortedData.map(d => d.averageSentiment),\n          borderColor: 'rgb(139, 92, 246)',\n          backgroundColor: 'rgba(139, 92, 246, 0.5)',\n          yAxisID: 'y1',\n        },\n        {\n          label: 'Stock Price',\n          data: sortedData.map(d => d.price),\n          borderColor: 'rgb(16, 185, 129)',\n          backgroundColor: 'rgba(16, 185, 129, 0.5)',\n          yAxisID: 'y2',\n        },\n      ],\n    };\n  }, [news, tweets, stockData]);\n\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index' as const,\n      intersect: false,\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Correlation Timeline',\n      },\n    },\n    scales: {\n      y: {\n        type: 'linear' as const,\n        display: true,\n        position: 'left' as const,\n        title: {\n          display: true,\n          text: 'News Count',\n        },\n      },\n      y1: {\n        type: 'linear' as const,\n        display: true,\n        position: 'right' as const,\n        title: {\n          display: true,\n          text: 'Sentiment Score',\n        },\n        grid: {\n          drawOnChartArea: false,\n        },\n      },\n      y2: {\n        type: 'linear' as const,\n        display: true,\n        position: 'right' as const,\n        title: {\n          display: true,\n          text: 'Stock Price ($)',\n        },\n        grid: {\n          drawOnChartArea: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow p-6\">\n      <div className=\"h-96\">\n        <Line data={chartData} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default TimelineChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}