{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderalmanza/current/src/components/StockPanel.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst StockPanel = ({\n  data,\n  news,\n  tweets\n}) => {\n  const chartData = {\n    labels: data.map(d => new Date(d.timestamp * 1000).toLocaleString()),\n    datasets: [{\n      label: 'Stock Price',\n      data: data.map(d => d.price),\n      borderColor: 'rgb(59, 130, 246)',\n      backgroundColor: 'rgba(59, 130, 246, 0.5)',\n      tension: 0.1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        grid: {\n          display: false\n        },\n        ticks: {\n          maxTicksLimit: 5\n        }\n      },\n      y: {\n        display: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    }\n  };\n  const getPercentageChange = () => {\n    if (data.length < 2) return 0;\n    const firstPrice = data[0].price;\n    const lastPrice = data[data.length - 1].price;\n    return (lastPrice - firstPrice) / firstPrice * 100;\n  };\n  const analyzeSentiment = () => {\n    // Count positive/negative sentiment from social media\n    const socialSentiments = tweets.map(t => t.sentiment.score);\n    const avgSocialSentiment = socialSentiments.length > 0 ? socialSentiments.reduce((a, b) => a + b, 0) / socialSentiments.length : 0;\n\n    // Count mentions of key terms in news and summaries\n    const positiveTerms = ['growth', 'increase', 'profit', 'bullish', 'up', 'higher', 'beat', 'positive'];\n    const negativeTerms = ['decline', 'decrease', 'loss', 'bearish', 'down', 'lower', 'miss', 'negative'];\n    let positiveCount = 0;\n    let negativeCount = 0;\n\n    // Analyze news articles\n    news.forEach(article => {\n      const text = `${article.title} ${article.description} ${article.aiSummary || ''}`.toLowerCase();\n      positiveTerms.forEach(term => {\n        if (text.includes(term)) positiveCount++;\n      });\n      negativeTerms.forEach(term => {\n        if (text.includes(term)) negativeCount++;\n      });\n    });\n\n    // Calculate overall sentiment metrics\n    const sentimentScore = (positiveCount - negativeCount) / (positiveCount + negativeCount || 1);\n    const socialConfidence = Math.abs(avgSocialSentiment);\n    const newsConfidence = (positiveCount + negativeCount) / (news.length || 1);\n    return {\n      overallSentiment: sentimentScore > 0 ? 'Positive' : sentimentScore < 0 ? 'Negative' : 'Neutral',\n      sentimentScore: sentimentScore,\n      socialSentiment: avgSocialSentiment > 0.1 ? 'Positive' : avgSocialSentiment < -0.1 ? 'Negative' : 'Neutral',\n      newsSentiment: positiveCount > negativeCount ? 'Positive' : positiveCount < negativeCount ? 'Negative' : 'Neutral',\n      positiveSignals: positiveCount,\n      negativeSignals: negativeCount,\n      confidence: (socialConfidence + newsConfidence) / 2\n    };\n  };\n  const generateInsights = () => {\n    // Analyze price trends\n    const priceChange = getPercentageChange();\n    const isUptrend = priceChange > 0;\n\n    // Find most significant news\n    const significantNews = news.filter(article => article.aiSummary).sort((a, b) => {\n      var _a$aiSummary, _a$aiSummary2, _a$aiSummary3, _b$aiSummary, _b$aiSummary2, _b$aiSummary3;\n      const aScore = (_a$aiSummary = a.aiSummary) !== null && _a$aiSummary !== void 0 && _a$aiSummary.toLowerCase().includes('significant') || (_a$aiSummary2 = a.aiSummary) !== null && _a$aiSummary2 !== void 0 && _a$aiSummary2.toLowerCase().includes('major') || (_a$aiSummary3 = a.aiSummary) !== null && _a$aiSummary3 !== void 0 && _a$aiSummary3.toLowerCase().includes('important') ? 1 : 0;\n      const bScore = (_b$aiSummary = b.aiSummary) !== null && _b$aiSummary !== void 0 && _b$aiSummary.toLowerCase().includes('significant') || (_b$aiSummary2 = b.aiSummary) !== null && _b$aiSummary2 !== void 0 && _b$aiSummary2.toLowerCase().includes('major') || (_b$aiSummary3 = b.aiSummary) !== null && _b$aiSummary3 !== void 0 && _b$aiSummary3.toLowerCase().includes('important') ? 1 : 0;\n      return bScore - aScore;\n    }).slice(0, 2);\n\n    // Analyze discussion trends\n    const discussionTopics = new Map();\n    tweets.forEach(tweet => {\n      const text = tweet.text.toLowerCase();\n      ['revenue', 'earnings', 'growth', 'product', 'market', 'competition', 'technology', 'management'].forEach(topic => {\n        if (text.includes(topic)) {\n          discussionTopics.set(topic, (discussionTopics.get(topic) || 0) + 1);\n        }\n      });\n    });\n\n    // Sort topics by frequency\n    const topTopics = Array.from(discussionTopics.entries()).sort((a, b) => b[1] - a[1]).slice(0, 3).map(([topic]) => topic);\n\n    // Generate key points\n    const keyPoints = [];\n\n    // Price trend point\n    keyPoints.push({\n      type: 'trend',\n      text: `Stock ${isUptrend ? 'up' : 'down'} ${Math.abs(priceChange).toFixed(2)}% with ${sentiment.overallSentiment.toLowerCase()} market sentiment`,\n      color: isUptrend ? 'text-green-600' : 'text-red-600'\n    });\n\n    // Volume point\n    const volume = data[data.length - 1].volume;\n    keyPoints.push({\n      type: 'volume',\n      text: `Trading volume at ${volume.toLocaleString()} shares`,\n      color: 'text-gray-600'\n    });\n\n    // News impact\n    if (significantNews.length > 0) {\n      keyPoints.push({\n        type: 'news',\n        text: 'Key developments: ' + significantNews.map(n => n.aiSummary).join(' '),\n        color: 'text-blue-600'\n      });\n    }\n\n    // Social discussion trends\n    if (topTopics.length > 0) {\n      keyPoints.push({\n        type: 'social',\n        text: `Most discussed topics: ${topTopics.join(', ')}`,\n        color: 'text-purple-600'\n      });\n    }\n\n    // Sentiment distribution\n    const sentimentCounts = tweets.reduce((acc, tweet) => {\n      acc[tweet.sentiment.label] = (acc[tweet.sentiment.label] || 0) + 1;\n      return acc;\n    }, {});\n    keyPoints.push({\n      type: 'sentiment',\n      text: `Community sentiment: ${Object.entries(sentimentCounts).sort((a, b) => b[1] - a[1]).map(([label, count]) => `${count} ${label.toLowerCase()}`).join(', ')}`,\n      color: 'text-orange-600'\n    });\n    return keyPoints;\n  };\n  const percentageChange = getPercentageChange();\n  const isPositive = percentageChange >= 0;\n  const sentiment = analyzeSentiment();\n  const insights = generateInsights();\n  const getSentimentColor = sentiment => {\n    switch (sentiment.toLowerCase()) {\n      case 'positive':\n        return 'text-green-600';\n      case 'negative':\n        return 'text-red-600';\n      default:\n        return 'text-yellow-600';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-900\",\n        children: \"Stock Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-sm font-medium ${isPositive ? 'text-green-600' : 'text-red-600'}`,\n        children: [isPositive ? '↑' : '↓', \" \", Math.abs(percentageChange).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), data.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No stock data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-64\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"Current Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium text-gray-900\",\n            children: [\"$\", data[data.length - 1].price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium text-gray-900\",\n            children: data[data.length - 1].volume.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 border-t border-gray-200 pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-3\",\n          children: \"Market Sentiment Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-lg font-semibold mb-2 ${getSentimentColor(sentiment.overallSentiment)}`,\n          children: [sentiment.overallSentiment, \" Sentiment\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-normal text-gray-500 ml-2\",\n            children: [\"(\", (sentiment.confidence * 100).toFixed(1), \"% confidence)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500\",\n              children: [\"News Sentiment (\", news.length, \" articles)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `font-medium ${getSentimentColor(sentiment.newsSentiment)}`,\n              children: [sentiment.newsSentiment, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500 ml-2\",\n                children: [\"(\", sentiment.positiveSignals, \" positive vs \", sentiment.negativeSignals, \" negative signals)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500\",\n              children: [\"Social Sentiment (\", tweets.length, \" discussions)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `font-medium ${getSentimentColor(sentiment.socialSentiment)}`,\n              children: sentiment.socialSentiment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 border-t border-gray-200 pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-3\",\n          children: \"AI Market Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: insights.map((insight, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mt-1 ${insight.color}`,\n              children: [insight.type === 'trend' && '📈', insight.type === 'volume' && '📊', insight.type === 'news' && '📰', insight.type === 'social' && '💬', insight.type === 'sentiment' && '🎯']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700\",\n              children: insight.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_c = StockPanel;\nexport default StockPanel;\nvar _c;\n$RefreshReg$(_c, \"StockPanel\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","StockPanel","data","news","tweets","chartData","labels","map","d","Date","timestamp","toLocaleString","datasets","label","price","borderColor","backgroundColor","tension","options","responsive","plugins","legend","display","title","scales","x","grid","ticks","maxTicksLimit","y","color","getPercentageChange","length","firstPrice","lastPrice","analyzeSentiment","socialSentiments","t","sentiment","score","avgSocialSentiment","reduce","a","b","positiveTerms","negativeTerms","positiveCount","negativeCount","forEach","article","text","description","aiSummary","toLowerCase","term","includes","sentimentScore","socialConfidence","Math","abs","newsConfidence","overallSentiment","socialSentiment","newsSentiment","positiveSignals","negativeSignals","confidence","generateInsights","priceChange","isUptrend","significantNews","filter","sort","_a$aiSummary","_a$aiSummary2","_a$aiSummary3","_b$aiSummary","_b$aiSummary2","_b$aiSummary3","aScore","bScore","slice","discussionTopics","Map","tweet","topic","set","get","topTopics","Array","from","entries","keyPoints","push","type","toFixed","volume","n","join","sentimentCounts","acc","Object","count","percentageChange","isPositive","insights","getSentimentColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","insight","index","_c","$RefreshReg$"],"sources":["/Users/alexanderalmanza/current/src/components/StockPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { StockData, NewsArticle, Tweet } from '../types';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface StockPanelProps {\n  data: StockData[];\n  news: NewsArticle[];\n  tweets: Tweet[];\n}\n\nconst StockPanel: React.FC<StockPanelProps> = ({ data, news, tweets }) => {\n  const chartData = {\n    labels: data.map(d => new Date(d.timestamp * 1000).toLocaleString()),\n    datasets: [\n      {\n        label: 'Stock Price',\n        data: data.map(d => d.price),\n        borderColor: 'rgb(59, 130, 246)',\n        backgroundColor: 'rgba(59, 130, 246, 0.5)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: true,\n        grid: {\n          display: false,\n        },\n        ticks: {\n          maxTicksLimit: 5,\n        },\n      },\n      y: {\n        display: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n        },\n      },\n    },\n  };\n\n  const getPercentageChange = () => {\n    if (data.length < 2) return 0;\n    const firstPrice = data[0].price;\n    const lastPrice = data[data.length - 1].price;\n    return ((lastPrice - firstPrice) / firstPrice) * 100;\n  };\n\n  const analyzeSentiment = () => {\n    // Count positive/negative sentiment from social media\n    const socialSentiments = tweets.map(t => t.sentiment.score);\n    const avgSocialSentiment = socialSentiments.length > 0 \n      ? socialSentiments.reduce((a, b) => a + b, 0) / socialSentiments.length\n      : 0;\n    \n    // Count mentions of key terms in news and summaries\n    const positiveTerms = ['growth', 'increase', 'profit', 'bullish', 'up', 'higher', 'beat', 'positive'];\n    const negativeTerms = ['decline', 'decrease', 'loss', 'bearish', 'down', 'lower', 'miss', 'negative'];\n    \n    let positiveCount = 0;\n    let negativeCount = 0;\n    \n    // Analyze news articles\n    news.forEach(article => {\n      const text = `${article.title} ${article.description} ${article.aiSummary || ''}`.toLowerCase();\n      positiveTerms.forEach(term => {\n        if (text.includes(term)) positiveCount++;\n      });\n      negativeTerms.forEach(term => {\n        if (text.includes(term)) negativeCount++;\n      });\n    });\n\n    // Calculate overall sentiment metrics\n    const sentimentScore = (positiveCount - negativeCount) / (positiveCount + negativeCount || 1);\n    const socialConfidence = Math.abs(avgSocialSentiment);\n    const newsConfidence = (positiveCount + negativeCount) / (news.length || 1);\n\n    return {\n      overallSentiment: sentimentScore > 0 ? 'Positive' : sentimentScore < 0 ? 'Negative' : 'Neutral',\n      sentimentScore: sentimentScore,\n      socialSentiment: avgSocialSentiment > 0.1 ? 'Positive' : avgSocialSentiment < -0.1 ? 'Negative' : 'Neutral',\n      newsSentiment: positiveCount > negativeCount ? 'Positive' : positiveCount < negativeCount ? 'Negative' : 'Neutral',\n      positiveSignals: positiveCount,\n      negativeSignals: negativeCount,\n      confidence: (socialConfidence + newsConfidence) / 2\n    };\n  };\n\n  const generateInsights = () => {\n    // Analyze price trends\n    const priceChange = getPercentageChange();\n    const isUptrend = priceChange > 0;\n    \n    // Find most significant news\n    const significantNews = news\n      .filter(article => article.aiSummary)\n      .sort((a, b) => {\n        const aScore = (a.aiSummary?.toLowerCase().includes('significant') || \n                       a.aiSummary?.toLowerCase().includes('major') ||\n                       a.aiSummary?.toLowerCase().includes('important')) ? 1 : 0;\n        const bScore = (b.aiSummary?.toLowerCase().includes('significant') || \n                       b.aiSummary?.toLowerCase().includes('major') ||\n                       b.aiSummary?.toLowerCase().includes('important')) ? 1 : 0;\n        return bScore - aScore;\n      })\n      .slice(0, 2);\n\n    // Analyze discussion trends\n    const discussionTopics = new Map();\n    tweets.forEach(tweet => {\n      const text = tweet.text.toLowerCase();\n      ['revenue', 'earnings', 'growth', 'product', 'market', 'competition', 'technology', 'management']\n        .forEach(topic => {\n          if (text.includes(topic)) {\n            discussionTopics.set(topic, (discussionTopics.get(topic) || 0) + 1);\n          }\n        });\n    });\n\n    // Sort topics by frequency\n    const topTopics = Array.from(discussionTopics.entries())\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, 3)\n      .map(([topic]) => topic);\n\n    // Generate key points\n    const keyPoints = [];\n\n    // Price trend point\n    keyPoints.push({\n      type: 'trend',\n      text: `Stock ${isUptrend ? 'up' : 'down'} ${Math.abs(priceChange).toFixed(2)}% with ${\n        sentiment.overallSentiment.toLowerCase()} market sentiment`,\n      color: isUptrend ? 'text-green-600' : 'text-red-600'\n    });\n\n    // Volume point\n    const volume = data[data.length - 1].volume;\n    keyPoints.push({\n      type: 'volume',\n      text: `Trading volume at ${volume.toLocaleString()} shares`,\n      color: 'text-gray-600'\n    });\n\n    // News impact\n    if (significantNews.length > 0) {\n      keyPoints.push({\n        type: 'news',\n        text: 'Key developments: ' + significantNews.map(n => n.aiSummary).join(' '),\n        color: 'text-blue-600'\n      });\n    }\n\n    // Social discussion trends\n    if (topTopics.length > 0) {\n      keyPoints.push({\n        type: 'social',\n        text: `Most discussed topics: ${topTopics.join(', ')}`,\n        color: 'text-purple-600'\n      });\n    }\n\n    // Sentiment distribution\n    const sentimentCounts = tweets.reduce((acc, tweet) => {\n      acc[tweet.sentiment.label] = (acc[tweet.sentiment.label] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    keyPoints.push({\n      type: 'sentiment',\n      text: `Community sentiment: ${\n        Object.entries(sentimentCounts)\n          .sort((a, b) => b[1] - a[1])\n          .map(([label, count]) => `${count} ${label.toLowerCase()}`)\n          .join(', ')\n      }`,\n      color: 'text-orange-600'\n    });\n\n    return keyPoints;\n  };\n\n  const percentageChange = getPercentageChange();\n  const isPositive = percentageChange >= 0;\n  const sentiment = analyzeSentiment();\n  const insights = generateInsights();\n\n  const getSentimentColor = (sentiment: string) => {\n    switch (sentiment.toLowerCase()) {\n      case 'positive':\n        return 'text-green-600';\n      case 'negative':\n        return 'text-red-600';\n      default:\n        return 'text-yellow-600';\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow p-6\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Stock Performance</h2>\n        <div\n          className={`text-sm font-medium ${\n            isPositive ? 'text-green-600' : 'text-red-600'\n          }`}\n        >\n          {isPositive ? '↑' : '↓'} {Math.abs(percentageChange).toFixed(2)}%\n        </div>\n      </div>\n      \n      {data.length === 0 ? (\n        <p className=\"text-gray-500\">No stock data available.</p>\n      ) : (\n        <>\n          <div className=\"h-64\">\n            <Line data={chartData} options={options} />\n          </div>\n\n          <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <p className=\"text-gray-500\">Current Price</p>\n              <p className=\"font-medium text-gray-900\">\n                ${data[data.length - 1].price.toFixed(2)}\n              </p>\n            </div>\n            <div>\n              <p className=\"text-gray-500\">Volume</p>\n              <p className=\"font-medium text-gray-900\">\n                {data[data.length - 1].volume.toLocaleString()}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"mt-6 border-t border-gray-200 pt-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Market Sentiment Analysis</h3>\n            \n            <div className={`text-lg font-semibold mb-2 ${getSentimentColor(sentiment.overallSentiment)}`}>\n              {sentiment.overallSentiment} Sentiment\n              <span className=\"text-sm font-normal text-gray-500 ml-2\">\n                ({(sentiment.confidence * 100).toFixed(1)}% confidence)\n              </span>\n            </div>\n\n            <div className=\"space-y-3 text-sm\">\n              <div>\n                <p className=\"text-gray-500\">News Sentiment ({news.length} articles)</p>\n                <p className={`font-medium ${getSentimentColor(sentiment.newsSentiment)}`}>\n                  {sentiment.newsSentiment}\n                  <span className=\"text-gray-500 ml-2\">\n                    ({sentiment.positiveSignals} positive vs {sentiment.negativeSignals} negative signals)\n                  </span>\n                </p>\n              </div>\n\n              <div>\n                <p className=\"text-gray-500\">Social Sentiment ({tweets.length} discussions)</p>\n                <p className={`font-medium ${getSentimentColor(sentiment.socialSentiment)}`}>\n                  {sentiment.socialSentiment}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-6 border-t border-gray-200 pt-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">AI Market Insights</h3>\n            <div className=\"space-y-3\">\n              {insights.map((insight, index) => (\n                <div key={index} className=\"flex items-start space-x-2\">\n                  <div className={`mt-1 ${insight.color}`}>\n                    {insight.type === 'trend' && '📈'}\n                    {insight.type === 'volume' && '📊'}\n                    {insight.type === 'news' && '📰'}\n                    {insight.type === 'social' && '💬'}\n                    {insight.type === 'sentiment' && '🎯'}\n                  </div>\n                  <p className=\"text-sm text-gray-700\">{insight.text}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default StockPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}