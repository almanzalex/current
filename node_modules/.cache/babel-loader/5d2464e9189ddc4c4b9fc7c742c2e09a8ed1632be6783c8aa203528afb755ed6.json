{"ast":null,"code":"import { create } from 'zustand';\nimport { stockService } from '../services/stockService';\nimport { newsService } from '../services/newsService';\nimport { socialService } from '../services/socialService';\nimport { sentimentService } from '../services/sentimentService';\nexport const useStore = create((set, get) => ({\n  stockData: [],\n  news: [],\n  tweets: [],\n  sentimentData: null,\n  isLoading: false,\n  error: null,\n  currentSymbol: '',\n  timeRange: '24h',\n  fetchData: async (symbol, timeRange) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      // get all data at once\n      const [stockData, newsData, socialData, sentimentData] = await Promise.all([stockService.getStockData(symbol, timeRange), newsService.getNews(symbol), socialService.getSocialPosts(symbol), sentimentService.getSentiment(symbol)]);\n      set({\n        stockData,\n        news: newsData,\n        tweets: socialData,\n        sentimentData,\n        isLoading: false,\n        error: null,\n        currentSymbol: symbol,\n        timeRange\n      });\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'An error occurred',\n        isLoading: false\n      });\n    }\n  }\n}));","map":{"version":3,"names":["create","stockService","newsService","socialService","sentimentService","useStore","set","get","stockData","news","tweets","sentimentData","isLoading","error","currentSymbol","timeRange","fetchData","symbol","newsData","socialData","Promise","all","getStockData","getNews","getSocialPosts","getSentiment","Error","message"],"sources":["/Users/alexanderalmanza/current/src/store/index.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { StockData, NewsArticle, Tweet, SentimentData, SocialResponse } from '../types';\nimport { stockService } from '../services/stockService';\nimport { newsService } from '../services/newsService';\nimport { socialService } from '../services/socialService';\nimport { sentimentService } from '../services/sentimentService';\n\ninterface AppState {\n  stockData: StockData[];\n  news: NewsArticle[];\n  tweets: Tweet[] | SocialResponse;\n  sentimentData: SentimentData | null;\n  isLoading: boolean;\n  error: string | null;\n  currentSymbol: string;\n  timeRange: string;\n  fetchData: (symbol: string, timeRange: string) => Promise<void>;\n}\n\nexport const useStore = create<AppState>((set, get) => ({\n  stockData: [],\n  news: [],\n  tweets: [],\n  sentimentData: null,\n  isLoading: false,\n  error: null,\n  currentSymbol: '',\n  timeRange: '24h',\n\n  fetchData: async (symbol: string, timeRange: string) => {\n    set({ isLoading: true, error: null });\n\n    try {\n      // get all data at once\n      const [stockData, newsData, socialData, sentimentData] = await Promise.all([\n        stockService.getStockData(symbol, timeRange),\n        newsService.getNews(symbol),\n        socialService.getSocialPosts(symbol),\n        sentimentService.getSentiment(symbol)\n      ]);\n\n      set({\n        stockData,\n        news: newsData,\n        tweets: socialData,\n        sentimentData,\n        isLoading: false,\n        error: null,\n        currentSymbol: symbol,\n        timeRange\n      });\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'An error occurred',\n        isLoading: false,\n      });\n    }\n  },\n})); "],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,QAAQ,8BAA8B;AAc/D,OAAO,MAAMC,QAAQ,GAAGL,MAAM,CAAW,CAACM,GAAG,EAAEC,GAAG,MAAM;EACtDC,SAAS,EAAE,EAAE;EACbC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,aAAa,EAAE,IAAI;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,aAAa,EAAE,EAAE;EACjBC,SAAS,EAAE,KAAK;EAEhBC,SAAS,EAAE,MAAAA,CAAOC,MAAc,EAAEF,SAAiB,KAAK;IACtDT,GAAG,CAAC;MAAEM,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IAErC,IAAI;MACF;MACA,MAAM,CAACL,SAAS,EAAEU,QAAQ,EAAEC,UAAU,EAAER,aAAa,CAAC,GAAG,MAAMS,OAAO,CAACC,GAAG,CAAC,CACzEpB,YAAY,CAACqB,YAAY,CAACL,MAAM,EAAEF,SAAS,CAAC,EAC5Cb,WAAW,CAACqB,OAAO,CAACN,MAAM,CAAC,EAC3Bd,aAAa,CAACqB,cAAc,CAACP,MAAM,CAAC,EACpCb,gBAAgB,CAACqB,YAAY,CAACR,MAAM,CAAC,CACtC,CAAC;MAEFX,GAAG,CAAC;QACFE,SAAS;QACTC,IAAI,EAAES,QAAQ;QACdR,MAAM,EAAES,UAAU;QAClBR,aAAa;QACbC,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAE,IAAI;QACXC,aAAa,EAAEG,MAAM;QACrBF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdP,GAAG,CAAC;QACFO,KAAK,EAAEA,KAAK,YAAYa,KAAK,GAAGb,KAAK,CAACc,OAAO,GAAG,mBAAmB;QACnEf,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}