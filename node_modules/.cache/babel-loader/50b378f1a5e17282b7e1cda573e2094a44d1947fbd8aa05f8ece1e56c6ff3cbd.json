{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderalmanza/current/src/components/SocialPanel.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SocialPanel = ({\n  tweets,\n  sentimentData\n}) => {\n  const formatDateTime = dateString => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) {\n        return 'Invalid date';\n      }\n      const dateStr = date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric'\n      });\n      const timeStr = date.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      });\n      return `${dateStr} at ${timeStr}`;\n    } catch (error) {\n      return 'Invalid date';\n    }\n  };\n  const getSentimentDisplay = sentiment => {\n    if (sentiment > 0.1) {\n      return {\n        label: 'Positive',\n        color: 'text-green-600 bg-green-50'\n      };\n    } else if (sentiment < -0.1) {\n      return {\n        label: 'Negative',\n        color: 'text-red-600 bg-red-50'\n      };\n    } else {\n      return {\n        label: 'Neutral',\n        color: 'text-gray-600 bg-gray-50'\n      };\n    }\n  };\n  const getOverallSentimentDisplay = sentimentData => {\n    if (!sentimentData) return null;\n    const {\n      sentiment\n    } = sentimentData;\n    let color = 'text-gray-600 bg-gray-50';\n    let label = 'Neutral';\n    if (sentiment > 0.1) {\n      color = 'text-green-600 bg-green-50';\n      label = 'Positive';\n    } else if (sentiment < -0.1) {\n      color = 'text-red-600 bg-red-50';\n      label = 'Negative';\n    }\n    return {\n      color,\n      label\n    };\n  };\n  const handleRedditClick = (url, postTitle) => {\n    // check url\n    if (!url) {\n      alert('Sorry, this Reddit post link is not available.');\n      return;\n    }\n\n    // add domain if needed\n    let finalUrl = url;\n    if (!url.startsWith('http')) {\n      finalUrl = `https://www.reddit.com${url}`;\n    }\n    window.open(finalUrl, '_blank', 'noopener,noreferrer');\n  };\n  const overallSentiment = getOverallSentimentDisplay(sentimentData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl shadow p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), \"Reddit Discussions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), overallSentiment ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `px-2 py-1 rounded-full text-xs font-medium border-gray-200 ${overallSentiment.color}`,\n        children: overallSentiment.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-2 py-1 rounded-full text-xs font-medium border-gray-200 bg-gray-50 text-gray-500\",\n        children: \"Analyzing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), !tweets || tweets.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-12 w-12 text-gray-300 mx-auto mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-sm\",\n        children: tweets !== null && tweets !== void 0 && tweets.message && tweets !== null && tweets !== void 0 && tweets.isBlocked ? \"Reddit scraping blocked on deployed servers. For social sentiment analysis, run the app locally where Reddit data can be accessed.\" : \"No recent discussions found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 text-xs mt-2\",\n        children: \"Try searching for a different stock symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4 max-h-96 overflow-y-auto scrollbar-thin\",\n      children: tweets.slice(0, 10).map((post, index) => {\n        const postSentiment = getSentimentDisplay(post.sentiment || 0);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-b border-gray-100 pb-4 last:border-b-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 rounded-full mt-2 bg-gray-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 min-w-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-900 line-clamp-2\",\n                children: post.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2 mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-500\",\n                  children: post.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-400\",\n                  children: \"\\u2022\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-500\",\n                  children: formatDateTime(post.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 25\n                }, this), post.sentiment !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-gray-400\",\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-xs px-1 py-0.5 rounded ${postSentiment.color}`,\n                    children: [\"(\", postSentiment.label, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true), post.url && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-gray-400\",\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleRedditClick(post.url, post.text),\n                    className: \"text-xs text-blue-600 hover:text-blue-800 transition-colors\",\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this), post.summary && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-600 mt-2 italic\",\n                children: post.summary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_c = SocialPanel;\nexport default SocialPanel;\nvar _c;\n$RefreshReg$(_c, \"SocialPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SocialPanel","tweets","sentimentData","formatDateTime","dateString","date","Date","isNaN","getTime","dateStr","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour","minute","hour12","error","getSentimentDisplay","sentiment","label","color","getOverallSentimentDisplay","handleRedditClick","url","postTitle","alert","finalUrl","startsWith","window","open","overallSentiment","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","length","message","isBlocked","slice","map","post","index","postSentiment","text","author","createdAt","undefined","onClick","summary","_c","$RefreshReg$"],"sources":["/Users/alexanderalmanza/current/src/components/SocialPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { Tweet, SentimentData } from '../types';\n\ninterface SocialPanelProps {\n  tweets: Tweet[] | any;\n  sentimentData?: SentimentData;\n}\n\nconst SocialPanel: React.FC<SocialPanelProps> = ({ tweets, sentimentData }) => {\n  const formatDateTime = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n        \n      if (isNaN(date.getTime())) {\n        return 'Invalid date';\n      }\n      \n      const dateStr = date.toLocaleDateString('en-US', { \n        month: 'short', \n        day: 'numeric' \n      });\n      const timeStr = date.toLocaleTimeString('en-US', { \n        hour: 'numeric', \n        minute: '2-digit',\n        hour12: true \n      });\n      \n      return `${dateStr} at ${timeStr}`;\n    } catch (error) {\n      return 'Invalid date';\n    }\n  };\n\n  const getSentimentDisplay = (sentiment: number) => {\n    if (sentiment > 0.1) {\n      return { label: 'Positive', color: 'text-green-600 bg-green-50' };\n    } else if (sentiment < -0.1) {\n      return { label: 'Negative', color: 'text-red-600 bg-red-50' };\n    } else {\n      return { label: 'Neutral', color: 'text-gray-600 bg-gray-50' };\n    }\n  };\n\n  const getOverallSentimentDisplay = (sentimentData?: SentimentData) => {\n    if (!sentimentData) return null;\n    \n    const { sentiment } = sentimentData;\n    \n    let color = 'text-gray-600 bg-gray-50';\n    let label = 'Neutral';\n    \n    if (sentiment > 0.1) {\n      color = 'text-green-600 bg-green-50';\n      label = 'Positive';\n    } else if (sentiment < -0.1) {\n      color = 'text-red-600 bg-red-50';\n      label = 'Negative';\n    }\n    \n    return {\n      color,\n      label\n    };\n  };\n\n  const handleRedditClick = (url: string, postTitle: string) => {\n    // check url\n    if (!url) {\n      alert('Sorry, this Reddit post link is not available.');\n      return;\n    }\n    \n    // add domain if needed\n    let finalUrl = url;\n    if (!url.startsWith('http')) {\n      finalUrl = `https://www.reddit.com${url}`;\n    }\n    \n    window.open(finalUrl, '_blank', 'noopener,noreferrer');\n  };\n\n  const overallSentiment = getOverallSentimentDisplay(sentimentData);\n\n  return (\n    <div className=\"bg-white rounded-xl shadow p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <svg className=\"h-5 w-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\" />\n          </svg>\n          Reddit Discussions\n        </h3>\n        {overallSentiment ? (\n          <div className={`px-2 py-1 rounded-full text-xs font-medium border-gray-200 ${overallSentiment.color}`}>\n            {overallSentiment.label}\n          </div>\n        ) : (\n          <div className=\"px-2 py-1 rounded-full text-xs font-medium border-gray-200 bg-gray-50 text-gray-500\">\n            Analyzing...\n          </div>\n        )}\n      </div>\n\n      {(!tweets || tweets.length === 0) ? (\n        <div className=\"text-center py-8\">\n          <div className=\"h-12 w-12 text-gray-300 mx-auto mb-3\">\n            <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\" />\n            </svg>\n          </div>\n          <p className=\"text-gray-500 text-sm\">\n            {tweets?.message && tweets?.isBlocked \n              ? \"Reddit scraping blocked on deployed servers. For social sentiment analysis, run the app locally where Reddit data can be accessed.\"\n              : \"No recent discussions found\"\n            }\n          </p>\n          <p className=\"text-gray-400 text-xs mt-2\">\n            Try searching for a different stock symbol\n          </p>\n        </div>\n      ) : (\n          <div className=\"space-y-4 max-h-96 overflow-y-auto scrollbar-thin\">\n            {tweets.slice(0, 10).map((post: any, index: number) => {\n              const postSentiment = getSentimentDisplay(post.sentiment || 0);\n              return (\n                <div key={index} className=\"border-b border-gray-100 pb-4 last:border-b-0\">\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"w-2 h-2 rounded-full mt-2 bg-gray-300\" />\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm font-medium text-gray-900 line-clamp-2\">{post.text}</p>\n                      <div className=\"flex items-center space-x-2 mt-2\">\n                        <span className=\"text-xs text-gray-500\">{post.author}</span>\n                        <span className=\"text-xs text-gray-400\">•</span>\n                        <span className=\"text-xs text-gray-500\">\n                          {formatDateTime(post.createdAt)}\n                        </span>\n                        {post.sentiment !== undefined && (\n                          <>\n                            <span className=\"text-xs text-gray-400\">•</span>\n                            <span className={`text-xs px-1 py-0.5 rounded ${postSentiment.color}`}>\n                              ({postSentiment.label})\n                            </span>\n                          </>\n                        )}\n                        {post.url && (\n                          <>\n                            <span className=\"text-xs text-gray-400\">•</span>\n                            <button\n                              onClick={() => handleRedditClick(post.url, post.text)}\n                              className=\"text-xs text-blue-600 hover:text-blue-800 transition-colors\"\n                            >\n                              View\n                            </button>\n                          </>\n                        )}\n                      </div>\n                      {post.summary && (\n                        <p className=\"text-xs text-gray-600 mt-2 italic\">{post.summary}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default SocialPanel; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQ1B,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAC7E,MAAMC,cAAc,GAAIC,UAAkB,IAAK;IAC7C,IAAI;MACF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;MAEjC,IAAIG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;QACzB,OAAO,cAAc;MACvB;MAEA,MAAMC,OAAO,GAAGJ,IAAI,CAACK,kBAAkB,CAAC,OAAO,EAAE;QAC/CC,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE;MACP,CAAC,CAAC;MACF,MAAMC,OAAO,GAAGR,IAAI,CAACS,kBAAkB,CAAC,OAAO,EAAE;QAC/CC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,OAAO,GAAGR,OAAO,OAAOI,OAAO,EAAE;IACnC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,OAAO,cAAc;IACvB;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAIC,SAAiB,IAAK;IACjD,IAAIA,SAAS,GAAG,GAAG,EAAE;MACnB,OAAO;QAAEC,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE;MAA6B,CAAC;IACnE,CAAC,MAAM,IAAIF,SAAS,GAAG,CAAC,GAAG,EAAE;MAC3B,OAAO;QAAEC,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAyB,CAAC;IAC/D,CAAC,MAAM;MACL,OAAO;QAAED,KAAK,EAAE,SAAS;QAAEC,KAAK,EAAE;MAA2B,CAAC;IAChE;EACF,CAAC;EAED,MAAMC,0BAA0B,GAAIrB,aAA6B,IAAK;IACpE,IAAI,CAACA,aAAa,EAAE,OAAO,IAAI;IAE/B,MAAM;MAAEkB;IAAU,CAAC,GAAGlB,aAAa;IAEnC,IAAIoB,KAAK,GAAG,0BAA0B;IACtC,IAAID,KAAK,GAAG,SAAS;IAErB,IAAID,SAAS,GAAG,GAAG,EAAE;MACnBE,KAAK,GAAG,4BAA4B;MACpCD,KAAK,GAAG,UAAU;IACpB,CAAC,MAAM,IAAID,SAAS,GAAG,CAAC,GAAG,EAAE;MAC3BE,KAAK,GAAG,wBAAwB;MAChCD,KAAK,GAAG,UAAU;IACpB;IAEA,OAAO;MACLC,KAAK;MACLD;IACF,CAAC;EACH,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAACC,GAAW,EAAEC,SAAiB,KAAK;IAC5D;IACA,IAAI,CAACD,GAAG,EAAE;MACRE,KAAK,CAAC,gDAAgD,CAAC;MACvD;IACF;;IAEA;IACA,IAAIC,QAAQ,GAAGH,GAAG;IAClB,IAAI,CAACA,GAAG,CAACI,UAAU,CAAC,MAAM,CAAC,EAAE;MAC3BD,QAAQ,GAAG,yBAAyBH,GAAG,EAAE;IAC3C;IAEAK,MAAM,CAACC,IAAI,CAACH,QAAQ,EAAE,QAAQ,EAAE,qBAAqB,CAAC;EACxD,CAAC;EAED,MAAMI,gBAAgB,GAAGT,0BAA0B,CAACrB,aAAa,CAAC;EAElE,oBACEL,OAAA;IAAKoC,SAAS,EAAC,gCAAgC;IAAAC,QAAA,gBAC7CrC,OAAA;MAAKoC,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDrC,OAAA;QAAIoC,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBACnErC,OAAA;UAAKoC,SAAS,EAAC,cAAc;UAACE,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,OAAO,EAAC,WAAW;UAAAH,QAAA,eACjFrC,OAAA;YAAMyC,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,WAAW,EAAE,CAAE;YAACC,CAAC,EAAC;UAA+J;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpO,CAAC,sBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACJb,gBAAgB,gBACfnC,OAAA;QAAKoC,SAAS,EAAE,8DAA8DD,gBAAgB,CAACV,KAAK,EAAG;QAAAY,QAAA,EACpGF,gBAAgB,CAACX;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,gBAENhD,OAAA;QAAKoC,SAAS,EAAC,qFAAqF;QAAAC,QAAA,EAAC;MAErG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAEJ,CAAC5C,MAAM,IAAIA,MAAM,CAAC6C,MAAM,KAAK,CAAC,gBAC9BjD,OAAA;MAAKoC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BrC,OAAA;QAAKoC,SAAS,EAAC,sCAAsC;QAAAC,QAAA,eACnDrC,OAAA;UAAKsC,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,OAAO,EAAC,WAAW;UAAAH,QAAA,eACxDrC,OAAA;YAAMyC,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,WAAW,EAAE,CAAE;YAACC,CAAC,EAAC;UAA+J;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNhD,OAAA;QAAGoC,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EACjCjC,MAAM,aAANA,MAAM,eAANA,MAAM,CAAE8C,OAAO,IAAI9C,MAAM,aAANA,MAAM,eAANA,MAAM,CAAE+C,SAAS,GACjC,oIAAoI,GACpI;MAA6B;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhC,CAAC,eACJhD,OAAA;QAAGoC,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAE1C;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAEJhD,OAAA;MAAKoC,SAAS,EAAC,mDAAmD;MAAAC,QAAA,EAC/DjC,MAAM,CAACgD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAS,EAAEC,KAAa,KAAK;QACrD,MAAMC,aAAa,GAAGlC,mBAAmB,CAACgC,IAAI,CAAC/B,SAAS,IAAI,CAAC,CAAC;QAC9D,oBACEvB,OAAA;UAAiBoC,SAAS,EAAC,+CAA+C;UAAAC,QAAA,eACxErC,OAAA;YAAKoC,SAAS,EAAC,4BAA4B;YAAAC,QAAA,gBACzCrC,OAAA;cAAKoC,SAAS,EAAC;YAAuC;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzDhD,OAAA;cAAKoC,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7BrC,OAAA;gBAAGoC,SAAS,EAAC,gDAAgD;gBAAAC,QAAA,EAAEiB,IAAI,CAACG;cAAI;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC7EhD,OAAA;gBAAKoC,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,gBAC/CrC,OAAA;kBAAMoC,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAEiB,IAAI,CAACI;gBAAM;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5DhD,OAAA;kBAAMoC,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAC;gBAAC;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChDhD,OAAA;kBAAMoC,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EACpC/B,cAAc,CAACgD,IAAI,CAACK,SAAS;gBAAC;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3B,CAAC,EACNM,IAAI,CAAC/B,SAAS,KAAKqC,SAAS,iBAC3B5D,OAAA,CAAAE,SAAA;kBAAAmC,QAAA,gBACErC,OAAA;oBAAMoC,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAC;kBAAC;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAChDhD,OAAA;oBAAMoC,SAAS,EAAE,+BAA+BoB,aAAa,CAAC/B,KAAK,EAAG;oBAAAY,QAAA,GAAC,GACpE,EAACmB,aAAa,CAAChC,KAAK,EAAC,GACxB;kBAAA;oBAAAqB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA,eACP,CACH,EACAM,IAAI,CAAC1B,GAAG,iBACP5B,OAAA,CAAAE,SAAA;kBAAAmC,QAAA,gBACErC,OAAA;oBAAMoC,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAC;kBAAC;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAChDhD,OAAA;oBACE6D,OAAO,EAAEA,CAAA,KAAMlC,iBAAiB,CAAC2B,IAAI,CAAC1B,GAAG,EAAE0B,IAAI,CAACG,IAAI,CAAE;oBACtDrB,SAAS,EAAC,6DAA6D;oBAAAC,QAAA,EACxE;kBAED;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,eACT,CACH;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,EACLM,IAAI,CAACQ,OAAO,iBACX9D,OAAA;gBAAGoC,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAAEiB,IAAI,CAACQ;cAAO;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CACnE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAnCEO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoCV,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAACe,EAAA,GAhKI5D,WAAuC;AAkK7C,eAAeA,WAAW;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}