{"ast":null,"code":"import axios from 'axios';\nconst NEWS_API_KEY = process.env.REACT_APP_NEWS_API_KEY;\nconst NEWS_API_BASE_URL = 'https://newsapi.org/v2';\nconsole.log('NewsService Debug:');\nconsole.log('News API Key available:', NEWS_API_KEY ? 'YES' : 'NO');\nexport const newsService = {\n  async getNews(searchTerm, timeRange) {\n    try {\n      var _response$data$articl;\n      console.log(`Fetching news for term: ${searchTerm}, timeRange: ${timeRange}`);\n\n      // Calculate the from date based on timeRange\n      const now = new Date();\n      const from = new Date(now.getTime());\n      switch (timeRange) {\n        case '1h':\n          from.setHours(now.getHours() - 1);\n          break;\n        case '24h':\n          from.setDate(now.getDate() - 1);\n          break;\n        case '7d':\n          from.setDate(now.getDate() - 7);\n          break;\n        case '30d':\n          from.setDate(now.getDate() - 30);\n          break;\n      }\n      console.log('Making news API request...');\n      const response = await axios.get(`${NEWS_API_BASE_URL}/everything`, {\n        params: {\n          q: searchTerm,\n          from: from.toISOString(),\n          sortBy: 'publishedAt',\n          language: 'en',\n          apiKey: NEWS_API_KEY\n        }\n      });\n      console.log(`News API response: ${((_response$data$articl = response.data.articles) === null || _response$data$articl === void 0 ? void 0 : _response$data$articl.length) || 0} articles found`);\n      return response.data.articles.map(article => ({\n        title: article.title,\n        description: article.description,\n        url: article.url,\n        publishedAt: article.publishedAt,\n        source: {\n          name: article.source.name\n        }\n      }));\n    } catch (error) {\n      var _response, _response2;\n      console.error('Error fetching news:', error);\n      console.error('News API error details:', {\n        message: error.message,\n        response: (_response = error.response) === null || _response === void 0 ? void 0 : _response.data,\n        status: (_response2 = error.response) === null || _response2 === void 0 ? void 0 : _response2.status\n      });\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","NEWS_API_KEY","process","env","REACT_APP_NEWS_API_KEY","NEWS_API_BASE_URL","console","log","newsService","getNews","searchTerm","timeRange","_response$data$articl","now","Date","from","getTime","setHours","getHours","setDate","getDate","response","get","params","q","toISOString","sortBy","language","apiKey","data","articles","length","map","article","title","description","url","publishedAt","source","name","error","_response","_response2","message","status"],"sources":["/Users/loaneruser/Documents/GitHub/current/src/services/newsService.ts"],"sourcesContent":["import axios from 'axios';\nimport { NewsArticle } from '../types';\n\nconst NEWS_API_KEY = process.env.REACT_APP_NEWS_API_KEY;\nconst NEWS_API_BASE_URL = 'https://newsapi.org/v2';\n\nconsole.log('NewsService Debug:');\nconsole.log('News API Key available:', NEWS_API_KEY ? 'YES' : 'NO');\n\nexport const newsService = {\n  async getNews(searchTerm: string, timeRange: string): Promise<NewsArticle[]> {\n    try {\n      console.log(`Fetching news for term: ${searchTerm}, timeRange: ${timeRange}`);\n      \n      // Calculate the from date based on timeRange\n      const now = new Date();\n      const from = new Date(now.getTime());\n      \n      switch (timeRange) {\n        case '1h':\n          from.setHours(now.getHours() - 1);\n          break;\n        case '24h':\n          from.setDate(now.getDate() - 1);\n          break;\n        case '7d':\n          from.setDate(now.getDate() - 7);\n          break;\n        case '30d':\n          from.setDate(now.getDate() - 30);\n          break;\n      }\n\n      console.log('Making news API request...');\n      const response = await axios.get(`${NEWS_API_BASE_URL}/everything`, {\n        params: {\n          q: searchTerm,\n          from: from.toISOString(),\n          sortBy: 'publishedAt',\n          language: 'en',\n          apiKey: NEWS_API_KEY,\n        },\n      });\n\n      console.log(`News API response: ${response.data.articles?.length || 0} articles found`);\n\n      return response.data.articles.map((article: any) => ({\n        title: article.title,\n        description: article.description,\n        url: article.url,\n        publishedAt: article.publishedAt,\n        source: {\n          name: article.source.name,\n        },\n      }));\n    } catch (error) {\n      console.error('Error fetching news:', error);\n      console.error('News API error details:', {\n        message: (error as any).message,\n        response: (error as any).response?.data,\n        status: (error as any).response?.status,\n      });\n      throw error;\n    }\n  },\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACvD,MAAMC,iBAAiB,GAAG,wBAAwB;AAElDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;AACjCD,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEN,YAAY,GAAG,KAAK,GAAG,IAAI,CAAC;AAEnE,OAAO,MAAMO,WAAW,GAAG;EACzB,MAAMC,OAAOA,CAACC,UAAkB,EAAEC,SAAiB,EAA0B;IAC3E,IAAI;MAAA,IAAAC,qBAAA;MACFN,OAAO,CAACC,GAAG,CAAC,2BAA2BG,UAAU,gBAAgBC,SAAS,EAAE,CAAC;;MAE7E;MACA,MAAME,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,IAAI,GAAG,IAAID,IAAI,CAACD,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;MAEpC,QAAQL,SAAS;QACf,KAAK,IAAI;UACPI,IAAI,CAACE,QAAQ,CAACJ,GAAG,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UACjC;QACF,KAAK,KAAK;UACRH,IAAI,CAACI,OAAO,CAACN,GAAG,CAACO,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;UAC/B;QACF,KAAK,IAAI;UACPL,IAAI,CAACI,OAAO,CAACN,GAAG,CAACO,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;UAC/B;QACF,KAAK,KAAK;UACRL,IAAI,CAACI,OAAO,CAACN,GAAG,CAACO,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;UAChC;MACJ;MAEAd,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,MAAMc,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,GAAGjB,iBAAiB,aAAa,EAAE;QAClEkB,MAAM,EAAE;UACNC,CAAC,EAAEd,UAAU;UACbK,IAAI,EAAEA,IAAI,CAACU,WAAW,CAAC,CAAC;UACxBC,MAAM,EAAE,aAAa;UACrBC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE3B;QACV;MACF,CAAC,CAAC;MAEFK,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAAK,qBAAA,GAAAS,QAAQ,CAACQ,IAAI,CAACC,QAAQ,cAAAlB,qBAAA,uBAAtBA,qBAAA,CAAwBmB,MAAM,KAAI,CAAC,iBAAiB,CAAC;MAEvF,OAAOV,QAAQ,CAACQ,IAAI,CAACC,QAAQ,CAACE,GAAG,CAAEC,OAAY,KAAM;QACnDC,KAAK,EAAED,OAAO,CAACC,KAAK;QACpBC,WAAW,EAAEF,OAAO,CAACE,WAAW;QAChCC,GAAG,EAAEH,OAAO,CAACG,GAAG;QAChBC,WAAW,EAAEJ,OAAO,CAACI,WAAW;QAChCC,MAAM,EAAE;UACNC,IAAI,EAAEN,OAAO,CAACK,MAAM,CAACC;QACvB;MACF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,SAAA,EAAAC,UAAA;MACdpC,OAAO,CAACkC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5ClC,OAAO,CAACkC,KAAK,CAAC,yBAAyB,EAAE;QACvCG,OAAO,EAAGH,KAAK,CAASG,OAAO;QAC/BtB,QAAQ,GAAAoB,SAAA,GAAGD,KAAK,CAASnB,QAAQ,cAAAoB,SAAA,uBAAvBA,SAAA,CAAyBZ,IAAI;QACvCe,MAAM,GAAAF,UAAA,GAAGF,KAAK,CAASnB,QAAQ,cAAAqB,UAAA,uBAAvBA,UAAA,CAAyBE;MACnC,CAAC,CAAC;MACF,MAAMJ,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}