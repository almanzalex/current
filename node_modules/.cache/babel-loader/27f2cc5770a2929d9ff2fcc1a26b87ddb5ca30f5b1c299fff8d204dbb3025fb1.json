{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderalmanza/current/src/components/SocialPanel.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SocialPanel = ({\n  tweets,\n  sentimentData\n}) => {\n  const sentimentColor = sentiment => {\n    if (sentiment > 0.3) return 'text-green-600 bg-green-50';\n    if (sentiment < -0.3) return 'text-red-600 bg-red-50';\n    return 'text-gray-600 bg-gray-50';\n  };\n  const sentimentIcon = sentiment => {\n    if (sentiment > 0.3) return '↗';\n    if (sentiment < -0.3) return '↘';\n    return '→';\n  };\n  const overallColor = sentiment => {\n    if (sentiment > 0.3) return 'border-green-200 bg-green-50 text-green-700';\n    if (sentiment < -0.3) return 'border-red-200 bg-red-50 text-red-700';\n    return 'border-gray-200 bg-gray-50 text-gray-700';\n  };\n  const overallIcon = sentiment => {\n    if (sentiment > 0.3) return '↗';\n    if (sentiment < -0.3) return '↘';\n    return '→';\n  };\n  const formatDateTime = dateString => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) {\n        return 'Invalid date';\n      }\n      const dateStr = date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric'\n      });\n      const timeStr = date.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      });\n      return `${dateStr} at ${timeStr}`;\n    } catch (error) {\n      return 'Invalid date';\n    }\n  };\n  const handleRedditClick = (url, postTitle) => {\n    // check url\n    if (!url) {\n      alert('Sorry, this Reddit post link is not available.');\n      return;\n    }\n\n    // add domain if needed\n    let finalUrl = url;\n    if (!url.startsWith('http')) {\n      finalUrl = `https://www.reddit.com${url}`;\n    }\n    window.open(finalUrl, '_blank', 'noopener,noreferrer');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl shadow p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \"Reddit Discussions\", sentimentData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ml-3 px-2 py-1 rounded-full text-xs font-medium ${overallColor(sentimentData.sentiment)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-1\",\n            children: overallIcon(sentimentData.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), sentimentData.sentiment.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !tweets || tweets.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-12 w-12 text-gray-300 mx-auto mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-sm\",\n        children: tweets !== null && tweets !== void 0 && tweets.message && tweets !== null && tweets !== void 0 && tweets.isBlocked ? \"Reddit scraping blocked on deployed servers. For social sentiment analysis, run the app locally where Reddit data can be accessed.\" : \"No recent discussions found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4 max-h-96 overflow-y-auto\",\n      children: tweets.slice(0, 10).map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b border-gray-100 pb-4 last:border-b-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-2 h-2 rounded-full mt-2 ${sentimentColor(post.sentiment)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 min-w-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium text-gray-900 line-clamp-2\",\n              children: post.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2 mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500\",\n                children: post.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-400\",\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500\",\n                children: formatDateTime(post.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-400\",\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-xs ${sentimentColor(post.sentiment)}`,\n                children: sentimentIcon(post.sentiment)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this), post.url && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-400\",\n                  children: \"\\u2022\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRedditClick(post.url, post.text),\n                  className: \"text-xs text-blue-600 hover:text-blue-800 transition-colors\",\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), post.summary && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600 mt-2 italic\",\n              children: post.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = SocialPanel;\nexport default SocialPanel;\nvar _c;\n$RefreshReg$(_c, \"SocialPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SocialPanel","tweets","sentimentData","sentimentColor","sentiment","sentimentIcon","overallColor","overallIcon","formatDateTime","dateString","date","Date","isNaN","getTime","dateStr","toLocaleDateString","month","day","timeStr","toLocaleTimeString","hour","minute","hour12","error","handleRedditClick","url","postTitle","alert","finalUrl","startsWith","window","open","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","length","message","isBlocked","slice","map","post","index","text","author","createdAt","onClick","summary","_c","$RefreshReg$"],"sources":["/Users/alexanderalmanza/current/src/components/SocialPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { Tweet, SentimentData } from '../types';\n\ninterface SocialPanelProps {\n  tweets: Tweet[] | any;\n  sentimentData?: SentimentData;\n}\n\nconst SocialPanel: React.FC<SocialPanelProps> = ({ tweets, sentimentData }) => {\n  const sentimentColor = (sentiment: number) => {\n    if (sentiment > 0.3) return 'text-green-600 bg-green-50';\n    if (sentiment < -0.3) return 'text-red-600 bg-red-50';\n    return 'text-gray-600 bg-gray-50';\n  };\n\n  const sentimentIcon = (sentiment: number) => {\n    if (sentiment > 0.3) return '↗';\n    if (sentiment < -0.3) return '↘';\n    return '→';\n  };\n\n  const overallColor = (sentiment: number) => {\n    if (sentiment > 0.3) return 'border-green-200 bg-green-50 text-green-700';\n    if (sentiment < -0.3) return 'border-red-200 bg-red-50 text-red-700';\n    return 'border-gray-200 bg-gray-50 text-gray-700';\n  };\n\n  const overallIcon = (sentiment: number) => {\n    if (sentiment > 0.3) return '↗';\n    if (sentiment < -0.3) return '↘';\n    return '→';\n  };\n\n  const formatDateTime = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n        \n      if (isNaN(date.getTime())) {\n        return 'Invalid date';\n      }\n      \n      const dateStr = date.toLocaleDateString('en-US', { \n        month: 'short', \n        day: 'numeric' \n      });\n      const timeStr = date.toLocaleTimeString('en-US', { \n        hour: 'numeric', \n        minute: '2-digit',\n        hour12: true \n      });\n      \n      return `${dateStr} at ${timeStr}`;\n    } catch (error) {\n      return 'Invalid date';\n    }\n  };\n\n  const handleRedditClick = (url: string, postTitle: string) => {\n    // check url\n    if (!url) {\n      alert('Sorry, this Reddit post link is not available.');\n      return;\n    }\n    \n    // add domain if needed\n    let finalUrl = url;\n    if (!url.startsWith('http')) {\n      finalUrl = `https://www.reddit.com${url}`;\n    }\n    \n    window.open(finalUrl, '_blank', 'noopener,noreferrer');\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl shadow p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <svg className=\"h-5 w-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\" />\n          </svg>\n          Reddit Discussions\n          {sentimentData && (\n            <div className={`ml-3 px-2 py-1 rounded-full text-xs font-medium ${overallColor(sentimentData.sentiment)}`}>\n              <span className=\"mr-1\">{overallIcon(sentimentData.sentiment)}</span>\n              {sentimentData.sentiment.toFixed(2)}\n            </div>\n          )}\n        </h3>\n      </div>\n\n      {(!tweets || tweets.length === 0) ? (\n        <div className=\"text-center py-8\">\n          <div className=\"h-12 w-12 text-gray-300 mx-auto mb-3\">\n            <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\" />\n            </svg>\n          </div>\n          <p className=\"text-gray-500 text-sm\">\n            {tweets?.message && tweets?.isBlocked \n              ? \"Reddit scraping blocked on deployed servers. For social sentiment analysis, run the app locally where Reddit data can be accessed.\"\n              : \"No recent discussions found\"\n            }\n          </p>\n        </div>\n      ) : (\n          <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n            {tweets.slice(0, 10).map((post: any, index: number) => (\n              <div key={index} className=\"border-b border-gray-100 pb-4 last:border-b-0\">\n                <div className=\"flex items-start space-x-3\">\n                  <div className={`w-2 h-2 rounded-full mt-2 ${sentimentColor(post.sentiment)}`} />\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-gray-900 line-clamp-2\">{post.text}</p>\n                    <div className=\"flex items-center space-x-2 mt-2\">\n                      <span className=\"text-xs text-gray-500\">{post.author}</span>\n                      <span className=\"text-xs text-gray-400\">•</span>\n                      <span className=\"text-xs text-gray-500\">\n                        {formatDateTime(post.createdAt)}\n                      </span>\n                      <span className=\"text-xs text-gray-400\">•</span>\n                      <span className={`text-xs ${sentimentColor(post.sentiment)}`}>\n                        {sentimentIcon(post.sentiment)}\n                      </span>\n                      {post.url && (\n                        <>\n                          <span className=\"text-xs text-gray-400\">•</span>\n                          <button\n                            onClick={() => handleRedditClick(post.url, post.text)}\n                            className=\"text-xs text-blue-600 hover:text-blue-800 transition-colors\"\n                          >\n                            View\n                          </button>\n                        </>\n                      )}\n                    </div>\n                    {post.summary && (\n                      <p className=\"text-xs text-gray-600 mt-2 italic\">{post.summary}</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default SocialPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}